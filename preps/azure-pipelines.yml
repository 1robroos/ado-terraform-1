jobs:
  - job: 'preparefolder'
    displayName: job-prepare-files-folders
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: |
        cd preps
        export TF_VAR_app_name=${{parameters.TF_VAR_app_name}}
        export BRANCH_NAME=${{parameters.BRANCH_NAME}}
        echo TF_VAR_app_name=$TF_VAR_app_name
        ./prepare-files-folders.sh
      displayName: 'script-prepare-files-folders'    
    # - script: |
    #     cd preps
    #     export TF_VAR_app_name=${{parameters.TF_VAR_app_name}}
    #     export BRANCH_NAME=${{parameters.BRANCH_NAME}}
    #     echo TF_VAR_app_name=$TF_VAR_app_name
    #     ./prepare-backend.sh
    #   displayName:  'script-prepare-backend'
    - task: AWSShellScript@1
      inputs:
        awsCredentials: 'aws-AzureDevopsiamuser'
        regionName: 'us-east-1'
        scriptType: 'inline'
        # see https://github.com/JamesDLD/terraform/blob/master/pipeline/terraform.yml 
        inlineScript: |
          cd preps
          export TF_VAR_app_name=${{parameters.TF_VAR_app_name}}
          export BRANCH_NAME=${{parameters.BRANCH_NAME}}
          echo TF_VAR_app_name=$TF_VAR_app_name
          ./prepare-backend.sh
      name: script_prepare_backend 
    - task: AWSShellScript@1
      inputs:
        awsCredentials: 'aws-AzureDevopsiamuser'
        regionName: 'us-east-1'
        scriptType: 'inline'
        # see https://github.com/JamesDLD/terraform/blob/master/pipeline/terraform.yml 
        inlineScript: |
          cd preps
          export TF_VAR_app_name=${{parameters.TF_VAR_app_name}}
          export BRANCH_NAME=${{parameters.BRANCH_NAME}}
          export TF_VAR_region=${{parameters.TF_VAR_region}}
          export TERRAFORM_VERSION="1.0.5"
          ./terraform.sh
          # docker run --rm -w="/code" -e TF_VAR_app_name -e TF_VAR_region -e AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY -e CIRCLE_BRANCH -v "${HOME}"/project/:/code/ unfor19/terraform-alpine:$TERRAFORM_VERSION /code/scripts/terraform-apply.sh
      name: terraform_apply